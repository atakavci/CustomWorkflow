name: Available tests in output binaries

on:
  workflow_dispatch:

jobs:
  enterprise-tests:
    name: Build host
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Clone client
        uses: actions/checkout@v4
        with:
          repository: atakavci/NRedisStack
          ref: ali/tba-int
          path: client_src

      - name: Copy file to working directory
        run: |
          cp config/endpoints.json $(pwd)/endpoints.json
        shell: bash

      - name: Export service url
        run: |
          DNS_NAME=$(jq -r '.["standalone-entraid-acl"].raw_endpoints[0].dns_name' config/endpoints.json)
          # Drop the prefix until the first dot
          BASE_NAME=${DNS_NAME#*.}
          echo $BASE_NAME
          echo "SERVICE_URL=$BASE_NAME" >> $GITHUB_ENV
          
      - name: Create User
        uses: fjogeleit/http-request-action@v1      
        with:
          url: https://${{ env.SERVICE_URL }}:9443/v1/users
          method: POST
          headers: |
            Content-Type: application/json
          username: test@redis.com
          password: test123
          data: '{"name":"d686f08d-7b3c-4de6-bfee-1165934d3fb0","auth_method":"entraid","role_uids":[2],"email":"d686f08d-7b3c-4de6-bfee-1165934d3fb0@entra.id"}'
        
      - name: Set env variables for tests
        run: |
          echo "REDIS_ENDPOINTS_CONFIG_PATH=$(pwd)/endpoints.json" >> $GITHUB_ENV
        shell: bash

      - name: Dump env variables
        run: |
          echo "${REDIS_ENDPOINTS_CONFIG_PATH}"
          cat "${REDIS_ENDPOINTS_CONFIG_PATH}"
        shell: bash

      - name: .NET Core 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8

      - name: Tweak target frameworks
        working-directory: client_src
        run: |
          find . -name '*.csproj' | xargs -I {} sed -E -i 's|<TargetFrameworks(.*)>.*</TargetFrameworks>|<TargetFramework\1>net8.0</TargetFramework>|' {}
          find . -name '*.csproj' | xargs cat
          jq -n --arg version 8.0.0 '{"sdk":{"version":$version,"rollForward":"latestMinor"}}' > global.json
      - name: Check .NET version
        run: dotnet --version
      - name: Check .NET SDKs
        run: dotnet --list-sdks
      - name: Check .NET runtimes
        run: dotnet --list-runtimes

      - name: Restore dependencies
        working-directory: client_src
        run: dotnet restore

      - name: Build
        working-directory: client_src
        run: dotnet build --no-restore /p:ContinuousIntegrationBuild=true

      - name: List of Tests
        working-directory: client_src
        run: dotnet test -f net8.0 --no-build --list-tests --verbosity detailed /p:CollectCoverage=true /p:CoverletOutputFormat=opencover -p:BuildInParallel=false tests/Test.proj
        
      - name: Test
        working-directory: client_src
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        run: dotnet test -f net8.0 --no-build --verbosity detailed --filter AuthenticationTests tests/Test.proj 

